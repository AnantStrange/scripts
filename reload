#!/usr/bin/env bash

if [ -n "$1" ]; then
    a="$1"
else
    a=$(printf "Dwmblocks\nSXHKD\nDWM\nDunst\nTransmission\nI2P Router\nPicom\nJamesDSP\nWallpaper" | dmenu -p "Reload >")
fi

case "${a,,}" in  # Fix lowercase conversion using bash 4+ syntax
    "dwmblocks")
        if pidof dwmblocks >/dev/null; then
            a=$(printf "Restart\nKill" | dmenu -p "Dwmblocks is already running. What to do? >")
            if [ -z "$a" ]; then
                exit
            elif [ "$a" = "Restart" ]; then
                killall dwmblocks
                dwmblocks & disown
            else
                killall dwmblocks
            fi
        else
            a=$(printf "Start" | dmenu -p "Dwmblocks is not running. What to do? >")
            if [ -n "$a" ]; then
                dwmblocks &
            fi
        fi
        ;;

    "dunst")
        if pidof dunst >/dev/null; then
            a=$(printf "Restart\nKill" | dmenu -p "Dunst is already running. What to do? >")
            if [ -z "$a" ]; then
                exit
            elif [ "$a" = "Restart" ]; then
                killall dunst
                dunst & disown
            else
                killall dunst
            fi
        else
            a=$(printf "Start" | dmenu -p "Dunst is not running. What to do? >")
            if [ -n "$a" ]; then
                dunst &
            fi
        fi
        ;;

    "dwm")
        pkill -HUP dwm >> /tmp/dwm_log
        ;;

    "picom")
        if pidof picom >/dev/null; then
            a=$(printf "Restart\nKill" | dmenu -p "Picom is already running. What to do? >")
            if [ -z "$a" ]; then
                exit
            elif [ "$a" = "Restart" ]; then
                killall picom
                lnch picom
            else
                killall picom
            fi
        else
            a=$(printf "Start" | dmenu -p "Picom is not running. What to do? >")
            if [ -n "$a" ]; then
                lnch picom
            fi
        fi
        ;;

    "sxhkd")
        if pidof sxhkd >/dev/null; then
            a=$(printf "Restart\nKill" | dmenu -p "SXHKD is already running. What to do? >")
            if [ -z "$a" ]; then
                exit
            elif [ "$a" = "Restart" ]; then
                killall -SIGUSR1 sxhkd
            else
                killall sxhkd
            fi
        else
            a=$(printf "Start" | dmenu -p "SXHKD is not running. What to do? >")
            if [ -n "$a" ]; then
                sxhkd &
            fi
        fi
        ;;

    "transmission")
        if pidof transmission-daemon >/dev/null; then
            a=$(printf "Restart\nStop" | dmenu -p "Transmission is running. What to do? >")
            if [ -z "$a" ]; then
                exit
            elif [ "$a" = "Restart" ]; then
                systemctl restart transmission
            else
                systemctl stop transmission
            fi
        else
            a=$(printf "Start" | dmenu -p "Transmission Daemon not running. What to do? >")
            if [ -n "$a" ]; then
                systemctl start transmission
            fi
        fi
        ;;

    "i2p router")
        if i2prouter status | grep -q 'not running'; then
            a=$(printf "Start" | dmenu -p "I2P is not running. What to do? >")
            if [ -n "$a" ]; then
                out=$(i2prouter start)
            fi
        else
            a=$(printf "Stop" | dmenu -p "I2P is running. What to do? >")
            if [ -n "$a" ]; then
                out=$(i2prouter stop)
            fi
        fi
        ;;

    "jamesdsp")
        if pidof jamesdsp >/dev/null; then
            a=$(printf "Toggle\nRestart\nKill" | dmenu -p "JamesDSP is running. What to do? >")
            if [ -z "$a" ]; then
                exit
            elif [ "$a" = "Restart" ]; then
                killall jamesdsp
                jamesdsp -t
            elif [ "$a" = "Toggle" ]; then
                jdsp_toggle.sh
            else
                killall jamesdsp
            fi
        else
            a=$(printf "Start" | dmenu -p "JamesDSP Daemon not running. What to do? >")
            if [ -n "$a" ]; then
                jamesdsp -t
            fi
        fi
        ;;

    "wallpaper")
        tree -ifa ~/Wallpapers | grep -E "png|jpg|jpeg" > /tmp/wallpaper_list
        ;;
esac

if [[ -n "$a" && -n "$out" ]]; then
    dunstify "$a" "$out"
fi

